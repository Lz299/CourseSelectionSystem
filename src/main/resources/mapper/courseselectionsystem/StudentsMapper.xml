<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxy.no1.courseselectionsystem.mapper.StudentsMapper">
    
    <resultMap type="Students" id="StudentsResult">
        <result property="studentId"    column="student_id"    />
        <result property="studentNumber"    column="student_number"    />
        <result property="studentName"    column="student_name"    />
        <result property="studentAge"    column="student_age"    />
        <result property="studentSex"    column="student_sex"    />
        <result property="studentEmail"    column="student_email"    />
        <result property="studentPhone"    column="student_phone"    />
        <result property="studentPassword"    column="student_password"    />
        <result property="studentClass"    column="student_class"    />
        <result property="studentImg"    column="student_img"    />
        <result property="collegeId"    column="college_id"    />
        <result property="registrationDate"    column="registration_date"    />
    </resultMap>

    <sql id="selectStudentsVo">
        select student_id, student_number, student_name, student_age, student_sex, student_email, student_phone, student_password, student_class, student_img, college_id, registration_date from students
    </sql>

    <select id="selectStudentsList" parameterType="Students" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        <where>  
            <if test="studentNumber != null  and studentNumber != ''"> and student_number = #{studentNumber}</if>
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="studentAge != null "> and student_age = #{studentAge}</if>
            <if test="studentSex != null  and studentSex != ''"> and student_sex = #{studentSex}</if>
            <if test="studentEmail != null  and studentEmail != ''"> and student_email = #{studentEmail}</if>
            <if test="studentPhone != null  and studentPhone != ''"> and student_phone = #{studentPhone}</if>
            <if test="studentPassword != null  and studentPassword != ''"> and student_password = #{studentPassword}</if>
            <if test="studentClass != null  and studentClass != ''"> and student_class = #{studentClass}</if>
            <if test="studentImg != null  and studentImg != ''"> and student_img = #{studentImg}</if>
            <if test="collegeId != null "> and college_id = #{collegeId}</if>
            <if test="registrationDate != null "> and registration_date = #{registrationDate}</if>
        </where>
    </select>
    
    <select id="selectStudentsByStudentId" parameterType="Integer" resultMap="StudentsResult">
        <include refid="selectStudentsVo"/>
        where student_id = #{studentId}
    </select>
        
    <insert id="insertStudents" parameterType="Students" useGeneratedKeys="true" keyProperty="studentId">
        insert into students
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentNumber != null">student_number,</if>
            <if test="studentName != null">student_name,</if>
            <if test="studentAge != null">student_age,</if>
            <if test="studentSex != null">student_sex,</if>
            <if test="studentEmail != null">student_email,</if>
            <if test="studentPhone != null">student_phone,</if>
            <if test="studentPassword != null">student_password,</if>
            <if test="studentClass != null">student_class,</if>
            <if test="studentImg != null">student_img,</if>
            <if test="collegeId != null">college_id,</if>
            <if test="registrationDate != null">registration_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentNumber != null">#{studentNumber},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="studentAge != null">#{studentAge},</if>
            <if test="studentSex != null">#{studentSex},</if>
            <if test="studentEmail != null">#{studentEmail},</if>
            <if test="studentPhone != null">#{studentPhone},</if>
            <if test="studentPassword != null">#{studentPassword},</if>
            <if test="studentClass != null">#{studentClass},</if>
            <if test="studentImg != null">#{studentImg},</if>
            <if test="collegeId != null">#{collegeId},</if>
            <if test="registrationDate != null">#{registrationDate},</if>
         </trim>
    </insert>

    <update id="updateStudents" parameterType="Students">
        update students
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentNumber != null">student_number = #{studentNumber},</if>
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="studentAge != null">student_age = #{studentAge},</if>
            <if test="studentSex != null">student_sex = #{studentSex},</if>
            <if test="studentEmail != null">student_email = #{studentEmail},</if>
            <if test="studentPhone != null">student_phone = #{studentPhone},</if>
            <if test="studentPassword != null">student_password = #{studentPassword},</if>
            <if test="studentClass != null">student_class = #{studentClass},</if>
            <if test="studentImg != null">student_img = #{studentImg},</if>
            <if test="collegeId != null">college_id = #{collegeId},</if>
            <if test="registrationDate != null">registration_date = #{registrationDate},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteStudentsByStudentId" parameterType="Integer">
        delete from students where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentsByStudentIds" parameterType="String">
        delete from students where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>


    <select id="studentLogin" parameterType="String" resultMap="StudentsResult">

    </select>


<select id="selectStudentsByStudentNumber" parameterType="string" resultType="students">
    select *from students where student_number=#{studentNumber}
</select>





</mapper>
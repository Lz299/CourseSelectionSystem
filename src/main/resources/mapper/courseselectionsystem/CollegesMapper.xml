<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxy.no1.courseselectionsystem.mapper.CollegesMapper">
    
    <resultMap type="Colleges" id="CollegesResult">
        <result property="collegeId"    column="college_id"    />
        <result property="collegeNumber"    column="college_number"    />
        <result property="collegeName"    column="college_name"    />
    </resultMap>

    <sql id="selectCollegesVo">
        select college_id, college_number, college_name from colleges
    </sql>

    <select id="selectCollegesList" parameterType="Colleges" resultMap="CollegesResult">
        <include refid="selectCollegesVo"/>
        <where>  
            <if test="collegeNumber != null  and collegeNumber != ''"> and college_number = #{collegeNumber}</if>
            <if test="collegeName != null  and collegeName != ''"> and college_name like concat('%', #{collegeName}, '%')</if>
        </where>
    </select>
    
    <select id="selectCollegesByCollegeId" parameterType="Long" resultMap="CollegesResult">
        <include refid="selectCollegesVo"/>
        where college_id = #{collegeId}
    </select>
        
    <insert id="insertColleges" parameterType="Colleges" useGeneratedKeys="true" keyProperty="collegeId">
        insert into colleges
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="collegeNumber != null">college_number,</if>
            <if test="collegeName != null">college_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="collegeNumber != null">#{collegeNumber},</if>
            <if test="collegeName != null">#{collegeName},</if>
         </trim>
    </insert>

    <update id="updateColleges" parameterType="Colleges">
        update colleges
        <trim prefix="SET" suffixOverrides=",">
            <if test="collegeNumber != null">college_number = #{collegeNumber},</if>
            <if test="collegeName != null">college_name = #{collegeName},</if>
        </trim>
        where college_id = #{collegeId}
    </update>

    <delete id="deleteCollegesByCollegeId" parameterType="Long">
        delete from colleges where college_id = #{collegeId}
    </delete>

    <delete id="deleteCollegesByCollegeIds" parameterType="String">
        delete from colleges where college_id in 
        <foreach item="collegeId" collection="array" open="(" separator="," close=")">
            #{collegeId}
        </foreach>
    </delete>
</mapper>